generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model costumers {
  id         String   @id(map: "PK_235ef3b889390c91380dbba01fb") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name       String   @db.VarChar
  email      String   @db.VarChar
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  orders     orders[]
  wallet     wallet[]
}

model migrations {
  id        Int    @id(map: "PK_8c82d7f526340ab734260ea46be") @default(autoincrement())
  timestamp BigInt
  name      String @db.VarChar
}

model orders {
  id              String            @id(map: "PK_710e2d4957aa5878dfe94e4ac2f") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  customer_id     String?           @db.Uuid
  costumers       costumers?        @relation(fields: [customer_id], references: [id], onUpdate: NoAction, map: "OrdersCustomer")
  orders_products orders_products[]
}

model orders_products {
  id         String    @id(map: "PK_4945c6758fd65ffacda760b4ac9") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  price      Decimal   @db.Decimal(10, 2)
  quantity   Int
  created_at DateTime  @default(now()) @db.Timestamptz(6)
  updated_at DateTime  @default(now()) @db.Timestamptz(6)
  order_id   String?   @db.Uuid
  product_id String?   @db.Uuid
  orders     orders?   @relation(fields: [order_id], references: [id], onUpdate: NoAction, map: "OrdersProductsOrder ")
  products   products? @relation(fields: [product_id], references: [id], onUpdate: NoAction, map: "OrdersProductsProduct ")
}

model products {
  id              String            @id(map: "PK_0806c755e0aca124e67c0cf6d7d") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name            String            @db.VarChar
  price           Decimal           @db.Decimal(10, 2)
  quantity        Int
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  orders_products orders_products[]
}

model user {
  id          String        @id(map: "PK_cace4a159ff9f2512dd42373760") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  name        String        @db.VarChar
  email       String        @unique(map: "UQ_e12875dfb3b1d92d7d7c5377e22") @db.VarChar
  password    String        @db.VarChar
  avatar      String?       @db.VarChar
  created_at  DateTime      @default(now()) @db.Timestamptz(6)
  updated_at  DateTime      @default(now()) @db.Timestamptz(6)
  user_tokens user_tokens[]
}

model user_tokens {
  id         String   @id(map: "PK_63764db9d9aaa4af33e07b2f4bf") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  token      String   @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  user_id    String   @db.Uuid
  created_at DateTime @default(now()) @db.Timestamptz(6)
  updated_at DateTime @default(now()) @db.Timestamptz(6)
  user       user     @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "TokenUser")
}

model wallet {
  id          String     @id(map: "PK_bec464dd8d54c39c54fd32e2334") @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  funds       Decimal    @db.Decimal(10, 2)
  created_at  DateTime   @default(now()) @db.Timestamptz(6)
  updated_at  DateTime   @default(now()) @db.Timestamptz(6)
  Customer_id String?    @db.Uuid
  costumers   costumers? @relation(fields: [Customer_id], references: [id], onUpdate: NoAction, map: "walletCustomer")
}
